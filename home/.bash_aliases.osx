# ----------------------------------------------------------------
# OSX Specific Aliases
# ----------------------------------------------------------------

# Locations
alias _="cd ~"
alias _workspace="cd ~/workspace"
alias _projects="cd ~/Projects"
alias _Projects="cd ~/Projects"
alias _homeshick="cd ~/.homesick/repos"
alias _windscribe="cd ~/workspace/windscribe"
alias _private="cd ~/workspace/private"

# Finder
alias f.show='defaults write com.apple.finder AppleShowAllFiles YES; killall Finder /System/Library/CoreServices/Finder.app'
alias f.hide='defaults write com.apple.finder AppleShowAllFiles NO; killall Finder /System/Library/CoreServices/Finder.app'

# Security
alias k.add="ssh-add -K"

# Python
alias p.mkvenv="python3.6 -m venv venv"
alias p.serve="python -m SimpleHTTPServer"
alias p.activate=". venv/bin/activate"
alias p.uuid="python -c 'import uuid; print(uuid.uuid4())'"

# Linux
alias l.largest="du -a . | sort -n -r | head -n 5"
alias l.listen="lsof | grep LISTEN"

# Grep
alias cgrep="grep --color=always"

# Functions
function ii()   # Get current host related info.
{

    env_colors

    source ${HOME}/bin/localAddress.sh
    UPTIME=$(uptime)

    echo -e "${BRed}Hostname:$NC" && hostname
    echo -e "${BRed}Kernel:$NC" && uname -a
    echo -e "${BRed}Users logged on:$NC " && who | awk '{ print $1 }' | sort --unique
    echo -e "${BRed}Current date :$NC " && date
    echo -e "${BRed}Uptime :$NC " && trim ${UPTIME} && echo
    echo -e "${BRed}Diskspace :$NC " && df -h | grep disk
    echo -e "${BRed}Local IP Address :$NC" && echo "${PRIVATE_IP}"
    echo -e "${BRed}Public IP Address :$NC" && echo "$(dig TXT +short o-o.myaddr.l.google.com @ns1.google.com | sed 's/"//g')"
    echo -e "${BRed}Network connections :$NC "
    echo -e "Established Connections:  $(netstat -np tcp | grep -v unix | grep ESTABLISHED | wc -l)"
    echo -e "Listeners for Connectons: $(netstat -anp tcp  | grep -v unix | grep LISTEN | wc -l)"
    echo
}


# Security Shortcuts

function k.gen() {
	[[ -z $1 ]] && echo "Specify a target filename." && return 1
        [[ ! -d ${HOME}/.ssh ]] && mkdir -p ${HOME}/.ssh
	ssh-keygen -f "${HOME}/.ssh/$1"
}
